{"organizations": ["OPC UA"], "uuid": "76c60a7f9dd31d10d72b09dc19a34b0d60c6b567", "thread": {"social": {"gplus": {"shares": 0}, "pinterest": {"shares": 0}, "vk": {"shares": 0}, "linkedin": {"shares": 0}, "facebook": {"likes": 0, "shares": 0, "comments": 0}, "stumbledupon": {"shares": 0}}, "site_full": "www.automation.com", "main_image": "", "site_section": "http://www.automation.com/automation-news/rss", "section_title": "Automation.com | Automation News <span>The latest news in Automation technology for Automation industry professionals</span>", "url": "http://www.automation.com/automation-news/opc-ua-as-the-bridge-to-the-enterprise", "country": "US", "title": "OPC UA as the bridge to the enterprise", "performance_score": 0, "site": "automation.com", "participants_count": 0, "title_full": "OPC UA as the bridge to the enterprise", "spam_score": 0.0, "site_type": "news", "published": "2015-09-01T03:52:00.000+03:00", "replies_count": 0, "uuid": "76c60a7f9dd31d10d72b09dc19a34b0d60c6b567"}, "author": "", "url": "http://www.automation.com/automation-news/opc-ua-as-the-bridge-to-the-enterprise", "ord_in_thread": 0, "title": "OPC UA as the bridge to the enterprise", "locations": [], "entities": {"persons": [], "locations": [], "organizations": []}, "highlightText": "", "language": "english", "persons": [], "text": "OPC UA as the bridge to the enterprise OPC UA as the bridge to the enterprise August 31 2015 GO TO WEBSITE FOR MORE INFORMATION \nBy John Rinaldi, Real Time Automation \nIf you’ve paid any attention at all to factory automation over the last few years, you’ve noticed the ever-increasing emphasis on connecting the factory floor to the Enterprise. There are many good reasons for this. Some of them are internal: efficiency, productivity, higher quality, and the like. Others are driven by external requirements. \nIn the old days (ten years ago?), the production department was a completely separate entity from the rest of the corporation. There was little to no electronic data transfer between the production machines and the company’s business systems. Production was a black box. Labor and raw materials went in one end, and finished product came out the other end. Most of the communication was carried out using paper: paper production reports, paper inventory levels, paper raw material usage, paper quality reports, etc. \nToday, the aim is for instantaneous closed-loop communication. As units of product are consumed in the field, that information gets reported back to the machine that made it. The production machine checks its raw material inventory levels and on-hand finished product and schedules more production. It automatically transmits orders for any raw materials it needs from supplier machines. All automatic. All without human intervention. \nThat’s the plan anyway. In practice, it’s pretty hard to get there. We don’t have the luxury of ripping out all the production machines and replacing them with new, fully integrated machines with high-speed communication mechanisms. Instead, we have to do piecemeal implementations: upgrading and replacing systems one by one as time and funds allow. It’s a marathon, not a sprint, to the goal of fully automated systems. \nThe distinction that many people miss is that there’s a key distinction between the systems on the factory floor and in the Enterprise. This is the difference between what is called “loosely-coupled” systems and “tightly-coupled” systems. These aren’t new concepts, but I don’t think they’ve been examined in the light of the current trend toward the integration of factory floor and Enterprise systems. \nFactory floor systems can be labeled tightly-coupled. Systems that use Profibus, Profinet IO, DeviceNet, EtherNet/IP, or any Modbus version have a very strict architecture. These are really just I/O producers and consumers, despite that the folks at the ODVA (Open Device Vendor Association) and PI (Profinet International) would have you believe otherwise. \nLet’s look at the main characteristics of these Tightly Coupled systems: A Strictly Defined Communication Model – The communication between these systems is inflexible, tightly regulated, and as deterministic as the communication platforms allow. A Strictly Defined Data Model – The data (really I/O for most of these systems) model is predefined, limited and inflexible. ·Strictly Defined Data Types – The data types transported by these systems are limited, predefined and supported by both sides. There is no ability to send data in an open and universal format. \nTightly-coupled systems provide much needed, well-defined functionality in a highly specific domain. Expanding operation to other domains or trying to provide more general operation is difficult. Making more generic data and functionality available requires significant programming resources that results in a very inflexible interface. \nAnd that’s why tightly coupled systems are wrong for Enterprise communications. That is why I continue to be amused by the proponents of EtherNet/IP and Profinet IO as ways to exchange data with Enterprise systems. Can they be made to work for a specific application? Yes. But to get there requires a whole lot of effort and results in a difficult-to-maintain, inflexible system that is extremely fragile. \nLoosely-coupled systems, on the other hand, provide exactly the right kind of interface for Enterprise communications. Loosely-coupled systems decouple the platform from the data, the data from the data model, and provide a much more dynamic mechanism for moving data. \nLoosely-coupled systems have these kinds of characteristics: A Widely Used, Standards-Based Transport Layer – Messages are transported in loosely-coupled systems with open, widely-implemented, highly flexible transports layers: TCP and HTTP. An Open, Platform Independent Data Encoding – Data is encoded using an open standard data encoding like eXtensible Markup Language (XML) that can be processed by any computer platform. A Highly Extensible Operating Interface – The interface between loosely-coupled systems is flexible and extensible. SOAP (Simple Object Access Protocol) is the main interface, and it provides a highly flexible mechanism for messaging between loosely-coupled systems. \nEssentially, what I’ve described here is Web Services. Web Services is the backbone of everything we do on the Internet. It is extensible, flexible, platform independent – all required for the ever-expanding Internet. \nThe challenge is to how to best migrate the tightly-coupled factory floor architectures with the loosely coupled Web Services architecture of the Internet. Right now, because of the discontinuity between the factory floor and the Enterprise, opportunities to mine the factory floor for quality data, interrogate and build databases of maintenance data, feed dashboard reporting systems, gather historical data and feed enterprise analytic systems are lost. Opportunities to improve maintenance procedures, reduce downtime, compare performance at various plants, lines and cells across the enterprise are all lost. \nThe solution? It’s OPC UA. OPC UA can live in both the world of the factory floor and the Enterprise. \nOPC UA is about reliably, securely and most of all, easily, modeling “Objects” and making those Objects available around the plant floor, to Enterprise applications and throughout the corporation. The idea behind it is infinitely broader than anything most of us have ever thought about before. \nAn OPC UA Server models data, information, processes and systems as Objects and presents those Objects to Clients in ways that are useful to vastly different types of Client applications. And better yet, the UA Server provides sophisticated services that the Client can use, like the Discovery Service. \nUA is the future and the perfect technology to bridge the chasm between loosely and tightly-coupled systems. \nJohn Rinaldi is Chief Strategist, Business Development Manager and CEO of Real Time Automation (RTA) in Brookfield, WI. John is a recognized expert in industrial networks and the author of five books, three on Industrial Networking.", "external_links": [], "published": "2015-09-01T03:52:00.000+03:00", "crawled": "2015-09-01T21:57:59.373+03:00", "highlightTitle": ""}